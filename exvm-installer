#!/usr/bin/env bash

exvm_fatal() {
	tput sgr0
	tput setaf 1 # Red color
    echo "[ERROR] $1" >&2
	tput sgr0
	exit 1
}

exvm_error() {
	tput sgr0
	tput setaf 1 # Red color
    echo "[ERROR] $1" >&2
	tput sgr0
}

exvm_warn() {
	tput sgr0
	tput setaf 3 # Yellow color
    echo "[WARN] $1" >&1
	tput sgr0
}

exvm_info() {
	tput sgr0
	tput setaf 2 # Green color
    echo "[INFO] $1" >&1
	tput sgr0
}

exvm_dev_info() {
	tput sgr0
	tput setaf 2 # Green color
    if [[ -n $EXVM_DEV ]]; then
        echo "[INFO] $(date +'%Y-%m-%dT%H:%M:%S%z'): $@" >&1
    else
        echo "[INFO] $(date +'%Y-%m-%dT%H:%M:%S%z'): $@" > /dev/null
    fi
	tput sgr0
}

exvm_echo() {
    tput sgr0
	tput setaf 4 # Blue color
    echo "$1" >&1
	tput sgr0
}

exvm_success_echo() {
    tput sgr0
    tput setaf 5
    echo "$1" >&1
    tput sgr0
}

exvm_message() {
    tput sgr0
    tput setaf 2 # Green color
    echo "$1" >&1
    tput sgr0
}

update_profile() {
	[ -f "$1" ] || return 1

	grep -F "$source_line" "$1" > /dev/null 2>&1
	if [ $? -ne 0 ]; then
		echo -e "\n$source_line" >> "$1"
	fi
}

welcome_to_exvm() {
    v1=${EXVM_VERSION}
    exvm_echo "######################################################################"
    exvm_echo "#                                                                    #"
    exvm_echo "#    Congratulations! exvm v${v1} has been installed successfully.   #"
    exvm_echo "#      Welcome to use exvm tool to manage your elixir versions!      #"
    exvm_echo "#                                                                    #"
    exvm_echo "######################################################################"

    cat << "EOF"
                                                 ____
       ,.---,.  ,--,    ,--,                   ,'  , `.
     ,'   .' | |.  \   / .`|      ,---.     ,-+-,.' _ |
    ,---.'   | ; \ `\ /' / ;     /__./|  ,-+-. ;   , ||
    |   |   .' `. \  /  / .',---.;  ; | ,--.'|'   |  ;|
    :   :  |-,  \  \/  / .//___/ \  | ||   |  ,', |  ':
    :   |  ;/|   \  \.'  / \   ;  \ ' ||   | /  | |  ||
    |   :   .'    \  ;  ;   \   \  \: |'   | :  | :  |,
    |   |  |-,   / \  \  \   ;   \  ' .;   . |  ; |--'
    '   :  ;/|  ;  /\  \  \   \   \   '|   : |  | ,
    |   |    \./__;  \  ;  \   \   `  ;|   : '  |/
    |   :   .'|   : / \  \  ;   :   \ |;   | |`-'
    |   | ,'  ;   |/   \  ' |    '---" |   ;/
    `----'    `---'     `--`           '---'

EOF
}

BRANCH=${1:-master}
EXVM_DEST=${2:-$HOME}
EXVM_NAME="exvm"
SRC_REPO=${SRC_REPO:-https://github.com/keonjeo/exvm.git}

[[ "$EXVM_DEST" = "$HOME" ]] && EXVM_NAME=".exvm"
[[ -d "$EXVM_DEST/$EXVM_NAME" ]] && exvm_warn "Already installed! Remove old installation by running the following command:

    rm -rf $EXVM_DEST/$EXVM_NAME"

[[ -d "$EXVM_DEST/$EXVM_NAME" ]] && exit 1

[ -d "$EXVM_DEST" ] || mkdir -p "$EXVM_DEST" > /dev/null 2>&1 || exvm_fatal "Failed to create $EXVM_DEST"
[ -z "$(which git)" ] && exvm_fatal "Sorry guys. I can't find your git tool in your system.
        Debian / Ubuntu : sudo apt-get install git
        Redhat / Centos : sudo yum install git
                Mac OSX : sudo brew install git
"

[ -z "$(which wget)" ] && exvm_fatal "Sorry guys. I can't find your wget tool in your system.
        Debian / Ubuntu : sudo apt-get install wget
        Redhat / Centos : sudo yum install wget
                Mac OSX : sudo brew install wget
"

GIT_ROOT=$(git rev-parse --show-toplevel 2>/dev/null)

if [[ -z "$GIT_ROOT" || "$(basename "$GIT_ROOT")" != "exvm" ]];then
    echo "Cloning from $SRC_REPO to $EXVM_DEST/$EXVM_NAME"

    git clone --quiet "$SRC_REPO" "$EXVM_DEST/$EXVM_NAME" 2> /dev/null ||
        exvm_fatal "Failed to clone from $SRC_REPO into $EXVM_DEST/$EXVM_NAME"
else
    # Generally speaking, it is impossible for users to reach this branch.
    # For developer to execute exvm-installer script on the local.
    exvm_dev_info "==============================="
    exvm_dev_info "EXVM_DEST => $EXVM_DEST"
    exvm_dev_info "GIT_ROOT  => $GIT_ROOT"
    exvm_dev_info "==============================="
    if [[ $EXVM_DEST == *"$GIT_ROOT"* ]]; then # means that you want to install exvm tool into GIT_ROOT directory
        ln -s "$GIT_ROOT" "$EXVM_DEST"
    else
        cp -r "$GIT_ROOT" "$EXVM_DEST/$EXVM_NAME"
    fi
fi

pushd . > /dev/null
cd "$EXVM_DEST/$EXVM_NAME" && git checkout --quiet "$BRANCH" 2> /dev/null
[[ $? -ne 0 ]] && (exvm_fatal "Failed to checkout $BRANCH branch")
popd > /dev/null

# backup .git directory if exosts .git directory
[ -d "$EXVM_DEST/$EXVM_NAME/.git" ] && mv "$EXVM_DEST/$EXVM_NAME/.git" "$EXVM_DEST/$EXVM_NAME/git.bak"

# Create some directories for EXVM_HOME
[[ ! -d $EXVM_DEST/$EXVM_NAME/elixir ]] && mkdir -p $EXVM_DEST/$EXVM_NAME/elixir
[[ ! -d $EXVM_DEST/$EXVM_NAME/elixir_tars ]] && mkdir -p $EXVM_DEST/$EXVM_NAME/elixir_tars
[[ ! -d $EXVM_DEST/$EXVM_NAME/elixir_versions ]] && mkdir -p $EXVM_DEST/$EXVM_NAME/elixir_versions
[[ ! -d $EXVM_DEST/$EXVM_NAME/exvm_config ]] && mkdir -p $EXVM_DEST/$EXVM_NAME/exvm_config

# Create the configuration file for EXVM_HOME
[[ -f $EXVM_DEST/$EXVM_NAME/exvm_config/elixir_default ]] && rm -f $EXVM_DEST/$EXVM_NAME/exvm_config/elixir_default
touch $EXVM_DEST/$EXVM_NAME/exvm_config/elixir_default
exvm_dev_info "$EXVM_DEST/$EXVM_NAME/exvm_config/elixir_default succesfully created"

[[ -f $EXVM_DEST/$EXVM_NAME/exvm_config/elixir_current ]] && rm -f $EXVM_DEST/$EXVM_NAME/exvm_config/elixir_current
touch $EXVM_DEST/$EXVM_NAME/exvm_config/elixir_current
exvm_dev_info "$EXVM_DEST/$EXVM_NAME/exvm_config/elixir_current succesfully created"

source_line="[[ -s \"${EXVM_DEST}/$EXVM_NAME/scripts/exvm\" ]] && source \"${EXVM_DEST}/$EXVM_NAME/scripts/exvm\""
source_file="${EXVM_DEST}/$EXVM_NAME/scripts/exvm"

if [ -z "$EXVM_NO_UPDATE_PROFILE" ]; then
    if [ -n "$ZSH_NAME" ]; then
        update_profile "$HOME/.zshrc"
    elif [ "$(uname)" == "Linux" ]; then
        update_profile "$HOME/.bashrc" || update_profile "$HOME/.bash_profile"
    elif [ "$(uname)" == "Darwin" ]; then
        update_profile "$HOME/.profile" || update_profile "$HOME/.bash_profile"
    fi
fi

if [ -z "$EXVM_NO_UPDATE_PROFILE" ] && [ "$?" != "0" ]; then
	exvm_warn "Unable to locate profile settings file (Something like $HOME/.bashrc or $HOME/.bash_profile)"
	exvm_warn ""
	exvm_warn " You will have to manually add the following line:"
	exvm_warn ""
	exvm_warn "  $source_line"
	exvm_warn ""
fi

echo "#!/usr/bin/env bash\n" > "$EXVM_DEST/$EXVM_NAME/scripts/exvm"
echo "export EXVM_ROOT=$EXVM_DEST/$EXVM_NAME" >> "$EXVM_DEST/$EXVM_NAME/scripts/exvm"
echo "export ELIXIR_ROOT=$EXVM_DEST/$EXVM_NAME/elixir" >> "$EXVM_DEST/$EXVM_NAME/scripts/exvm"
echo "export EXVM_ROOT_BACKUP=$EXVM_DEST/$EXVM_NAME.back" >> "$EXVM_DEST/$EXVM_NAME/scripts/exvm"
echo ". \$EXVM_ROOT/scripts/default_init" >> "$EXVM_DEST/$EXVM_NAME/scripts/exvm"

[[ -s "$EXVM_DEST/$EXVM_NAME/scripts/exvm" ]] && source "$EXVM_DEST/$EXVM_NAME/scripts/exvm"

welcome_to_exvm

exvm_success_echo ""
exvm_success_echo ""
exvm_success_echo "Please restart your terminal session, or to get started execute the following command to make it effective."
exvm_success_echo ""
exvm_success_echo "       source ${source_file}      "
exvm_success_echo ""